"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const v2_1 = require("@discloudapp/api-types/v2");
const Base_1 = __importDefault(require("./Base"));
class User extends Base_1.default {
    /**
     * Your applications ID
     */
    appIDs;
    /**
     * Your custom domains on Discloud
     */
    customdomains;
    /**
     * Your id
     */
    id;
    /**
     * Your locale
     */
    locale;
    /**
     * Your plan
     */
    plan;
    /**
     * Date of when will your plan end
     */
    planDataEnd;
    /**
     * Timestamp of when will your plan end
     */
    planDataEndTimestamp;
    /**
     * Quantity of RAM was used for your applications
     */
    ramUsedMb;
    /**
     * Your subdomains on Discloud
     */
    subdomains;
    /**
     * Your total RAM quantity
     */
    totalRamMb;
    constructor(discloudApp, data) {
        super(discloudApp);
        this.appIDs = data.apps ?? [];
        this.customdomains = data.customdomains ?? [];
        this.id = data.userID;
        this.locale = data.locale;
        this.plan = data.plan;
        if (data.planDataEnd) {
            this.planDataEnd = new Date(data.planDataEnd);
            this.planDataEndTimestamp = this.planDataEnd.valueOf();
        }
        this.ramUsedMb = data.ramUsedMb;
        this.subdomains = data.subdomains ?? [];
        this.totalRamMb = data.totalRamMb;
    }
    get apps() {
        return this.discloudApp.apps;
    }
    /**
     * Set your locale on Discloud
     *
     * @param locale - Your locale like "en-US".
     * @see {@link LocaleString}
     * @returns Promise {@link Boolean}
     */
    async setLocale(locale) {
        const data = await this.discloudApp.rest.put(v2_1.Routes.locale(locale));
        if ("locale" in data)
            this.locale = data.locale;
        return data.locale === locale;
    }
    /**
     * Fetch a user from Discloud API
     *
     * @returns Promise {@link User}
     */
    async fetch() {
        const data = await this.discloudApp.rest.get(v2_1.Routes.user());
        return this._patch(data.user);
    }
    /**
     * @returns user id
     */
    toString() {
        return this.id;
    }
}
exports.default = User;
