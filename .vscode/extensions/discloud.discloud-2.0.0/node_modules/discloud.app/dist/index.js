"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.discloud = exports.User = exports.TeamManager = exports.Team = exports.DiscloudApp = exports.DataManager = exports.CachedManager = exports.BaseManager = exports.BaseApp = exports.Base = exports.AppUploaded = exports.AppTeamManager = exports.AppStatus = exports.AppManager = exports.AppBackup = exports.AppAptManager = exports.App = void 0;
const DiscloudApp_1 = __importDefault(require("./discloudApp/DiscloudApp"));
exports.DiscloudApp = DiscloudApp_1.default;
const AppAptManager_1 = __importDefault(require("./managers/AppAptManager"));
exports.AppAptManager = AppAptManager_1.default;
const AppManager_1 = __importDefault(require("./managers/AppManager"));
exports.AppManager = AppManager_1.default;
const AppTeamManager_1 = __importDefault(require("./managers/AppTeamManager"));
exports.AppTeamManager = AppTeamManager_1.default;
const BaseManager_1 = __importDefault(require("./managers/BaseManager"));
exports.BaseManager = BaseManager_1.default;
const CachedManager_1 = __importDefault(require("./managers/CachedManager"));
exports.CachedManager = CachedManager_1.default;
const DataManager_1 = __importDefault(require("./managers/DataManager"));
exports.DataManager = DataManager_1.default;
const TeamManager_1 = __importDefault(require("./managers/TeamManager"));
exports.TeamManager = TeamManager_1.default;
const App_1 = __importDefault(require("./structures/App"));
exports.App = App_1.default;
const AppBackup_1 = __importDefault(require("./structures/AppBackup"));
exports.AppBackup = AppBackup_1.default;
const AppStatus_1 = __importDefault(require("./structures/AppStatus"));
exports.AppStatus = AppStatus_1.default;
const AppUploaded_1 = __importDefault(require("./structures/AppUploaded"));
exports.AppUploaded = AppUploaded_1.default;
const Base_1 = __importDefault(require("./structures/Base"));
exports.Base = Base_1.default;
const BaseApp_1 = __importDefault(require("./structures/BaseApp"));
exports.BaseApp = BaseApp_1.default;
const Team_1 = __importDefault(require("./structures/Team"));
exports.Team = Team_1.default;
const User_1 = __importDefault(require("./structures/User"));
exports.User = User_1.default;
__exportStar(require("@discloudapp/api-types/v2"), exports);
__exportStar(require("@discloudapp/rest"), exports);
__exportStar(require("@discloudapp/util"), exports);
__exportStar(require("./@types"), exports);
__exportStar(require("./util"), exports);
/**
 * This is an instance of {@link DiscloudApp}
 *
 * Use this instead of instantiating the {@link DiscloudApp} class to use the library.
 *
 * @example
 *
 * ```js
 * // index.js
 * // Get instanced discloud
 * const { discloud } = require("discloud.app");
 *
 * // Set token
 * discloud.login("DISCLOUD_TOKEN");
 *
 * // Other file
 * // Get instanced discloud
 * const { discloud } = require("discloud.app");
 *
 * // ...
 *
 * async function () {
 *   await discloud.apps.fetch("ID"); // Promise<App>
 * }
 * ```
 */
exports.discloud = new DiscloudApp_1.default();
